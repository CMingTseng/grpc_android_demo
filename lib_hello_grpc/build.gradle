apply plugin: 'java'
apply plugin: 'com.google.protobuf'
apply plugin: 'idea'
//region protobuf code generation
sourceSets {
    main {
        proto {
            //FIXME  this name  "plugins"  method is protobuf-gradle-plugin:0.4.1 but gradle version is too older !!!
            // In addition to the default 'src/main/proto' you can set other  Ref : https://github.com/google/protobuf-gradle-plugin
//            srcDir 'src/main/protobuf'
//            srcDir 'src/main/protocolbuffers'
//            // In addition to the default '**/*.proto' (use with caution).
//            // Using an extension other than 'proto' is NOT recommended,
//            // because when proto files are published along with class files, we can
//            // only tell the type of a file from its extension.
//            include '**/*.protodevel'
        }
        java {
            srcDir 'src/main/java'
        }
    }
}

// Allow intellij projects to refer to generated-sources
idea {
    module {
        // The whole build dir is excluded by default, but we need build/generated-sources,
        // which contains the generated proto classes.
        excludeDirs = [file('.gradle')]
        if (buildDir.exists()) {
            excludeDirs += files(buildDir.listFiles())
            excludeDirs -= file("$buildDir/generated-sources")
        }
    }
}

//protocDep = "com.google.protobuf:protoc:3.0.0-alpha-3"
//protobufNativeCodeGenPluginDeps = ["grpc:io.grpc:protoc-gen-grpc-java:0.7.1"]
//FIXME  the below is need  !!!
protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.0.0-alpha-2'

    }
    plugins {
//        javalite {
//            // The codegen for lite comes as a separate artifact
//            artifact = 'com.google.protobuf:protoc-gen-javalite:3.0.0'
//        }
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:0.7.1'
        }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {}
        }
    }
}
//endregion
configurations.all {
    resolutionStrategy.force 'com.google.code.findbugs:jsr305:3.0.0'
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.google.guava:guava:18.0'
    implementation 'com.google.code.findbugs:jsr305:3.0.0'
//    implementation 'com.google.protobuf:protobuf-java:3.0.0-alpha-2'
    implementation 'io.grpc:grpc-protobuf:0.7.1'
    implementation 'io.grpc:grpc-okhttp:0.7.1'
    implementation 'io.grpc:grpc-stub:0.7.1'
    implementation 'io.grpc:grpc-auth:0.7.1'//FIXME dependencies google-auth-library-oauth2-http
    implementation 'io.grpc:grpc-netty:0.7.1'//FIXME dependencies io.netty:netty-all & com.twitter:hpack
    //FIXME can use io.grpc:grpc-all replace up five implementation but use io.grpc:grpc-all need implementation google-auth-library-oauth2-http
//    implementation 'io.grpc:grpc-all:0.7.1'
    // OAuth2 for Google API
//    implementation('com.google.auth:google-auth-library-oauth2-http:0.1.0') {
//        exclude module: 'httpclient'
//    }
    // these libraries are necessary for the server
//    implementation 'io.netty:netty-all:4.1.0.Beta5'
//    implementation 'com.twitter:hpack:0.11.0'
}